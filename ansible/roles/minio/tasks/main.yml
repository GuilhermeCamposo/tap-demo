- name: Evaluate if Minio exists
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    resource_definition: "{{ lookup('template', 'minio-template.yml.j2') }}"

- name: Waiting for Minio instance to be running
  kubernetes.core.k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    api_version: v1
    kind: Pod
    namespace: '{{ minio_project }}'
    label_selectors:
      - app = minio
    field_selectors:
      - status.phase=Running
  register: r_minio_pod
  retries: 20
  delay: 10
  until: r_minio_pod.resources | list | length == 1

- name: Log in Minio Instance
  ansible.builtin.command: "mc config host add tpa-minio https://minio-{{ minio_project }}.{{ route_subdomain }}:443 {{ minio_key }} {{ minio_secret }}"
  ignore_errors: false
  register: my_output
  changed_when: my_output.rc == 0
  retries: 10
  delay: 10
  until: my_output.rc == 0

- name: Create Buckets
  ansible.builtin.shell: |
     mc mb tpa-minio/{{ item[0] }} --ignore-existing
     mc policy download tpa-minio/{{ item[0] }}
     mc event add tpa-minio/{{ item[0] }} arn:minio:sqs::{{ item[1] }}:kafka --event put --ignore-existing
  ignore_errors: false
  register: my_output
  changed_when: my_output.rc != 0
  loop:
    - ["bombastic-default", "BOMBASTIC"]
    - ["vexination-default", "VEXINATION"]
    - ["v11y-default", "V11Y"]

- name: Restart Minio Service
  ansible.builtin.command: mc admin service restart tpa-minio
  ignore_errors: false
  register: my_output
  changed_when: my_output.rc != 0
