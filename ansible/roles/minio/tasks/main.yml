- name: Evaluate if Minio Stateful exists
  when: minio_stateful|bool
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    resource_definition: "{{ lookup('template', 'minio-stateful.yml.j2') }}"

- name: Evaluate if Minio Stateless exists
  when: not minio_stateful|bool
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    resource_definition: "{{ lookup('template', 'minio-stateless.yml.j2') }}"

- name: Waiting for Minio instance to be running
  kubernetes.core.k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    api_version: v1
    kind: Pod
    namespace: '{{ minio_project }}'
    label_selectors:
      - app = minio
    field_selectors:
      - status.phase=Running
  register: r_minio_pod
  retries: 20
  delay: 10
  until: r_minio_pod.resources | list | length == 1

- name: Log in Minio Instance
  ansible.builtin.command: "mc config host add tpa-minio https://minio-{{ minio_project }}.{{ route_subdomain }}:443 {{ minio_key }} {{ minio_secret }}"
  ignore_errors: false
  register: my_output
  changed_when: my_output.rc != 0

- name: List buckets
  ansible.builtin.command: "mc ls tpa-minio"
  ignore_errors: false
  register: buckets_output
  changed_when: buckets_output.rc != 0

- name: Create Buckets
  ansible.builtin.command: mc mb tpa-minio/{{ item }}
  ignore_errors: false
  register: my_output
  changed_when: my_output.rc != 0
  loop:
    - bombastic-default
    - vexination-default
    - v11y-default
  when: buckets_output.stdout | length == 0
