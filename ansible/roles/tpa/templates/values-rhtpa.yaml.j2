appDomain: {{ domain }}
authenticator:
  type: keycloak
tracing: {}
ingress:
  className: openshift-default

storage:
 endpoint: minio-{{ tpa_project }}.apps.{{ domain }}:443
 accessKey:
   valueFrom:
     secretKeyRef:
       name: s3-credentials
       key: user
 secretKey:
   valueFrom:
     secretKeyRef:
       name: s3-credentials
       key: password

eventBus:
  type: kafka
  bootstrapServers: cluster-kafka-bootstrap:9092
  config:
    securityProtocol: SASL_PLAINTEXT
    mechanism: SCRAM-SHA-512
    username: tester
    password:
      valueFrom:
        secretKeyRef:
          name: kafka-user-credential
          key: password

oidc:
  issuerUrl: https://keycloak-{{ keycloak_project }}.{{ route_subdomain }}/realms/trusted-artifact-signer
  clients:
   frontend:
     clientId: frontend
   walker:
     clientId: walker
     clientSecret:
       valueFrom:
         secretKeyRef:
           name: oidc-walker
           key: client-secret

bombastic:
 bucket: bombastic-default
 topics:
   failed: bombastic-failed-default
   indexed: bombastic-indexed-default
   stored: bombastic-stored-default

vexination:
 bucket: vexination-default
 topics:
   failed: vexination-failed-default
   indexed: vexination-indexed-default
   stored: vexination-stored-default

v11y:
 bucket: v11y-default
 topics:
   failed: v11y-failed-default
   indexed: v11y-indexed-default
   stored: v11y-stored-default

guac:
 database:
   sslMode: disable
   name:
     valueFrom:
       secretKeyRef:
         name: postgresql-credentials
         key: db.name
   host:
     valueFrom:
       secretKeyRef:
         name: postgresql-credentials
         key: db.host
   port:
     valueFrom:
       secretKeyRef:
         name: postgresql-credentials
         key: db.port
   username:
     valueFrom:
       secretKeyRef:
         name: postgresql-credentials
         key: db.user
   password:
     valueFrom:
       secretKeyRef:
         name: postgresql-credentials
         key: db.password

 initDatabase:
   sslMode: disable
   name:
     valueFrom:
       secretKeyRef:
         name: postgresql-admin-credentials
         key: db.name
   host:
     valueFrom:
       secretKeyRef:
         name: postgresql-admin-credentials
         key: db.host
   port:
     valueFrom:
       secretKeyRef:
         name: postgresql-admin-credentials
         key: db.port
   username:
     valueFrom:
       secretKeyRef:
         name: postgresql-admin-credentials
         key: db.user
   password:
     valueFrom:
       secretKeyRef:
         name: postgresql-admin-credentials
         key: db.password